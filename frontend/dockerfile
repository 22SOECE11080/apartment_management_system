# # stage 1: where i pull node's smallest image from docker registry
# FROM node:20-alpine AS builder

# #create a directory inside the contianer
# WORKDIR /app

# # Copy package files and install dependencies
# COPY package*.json ./

# #it use for faster dependencies installation
# RUN npm install

# # Copy source code to container
# COPY . .

# RUN npm run build || (echo "‚ùå Build failed" && exit 1)
# #stage 2: Runner stage - Create a lightweight production-ready containe

# FROM nginx:alpine AS runner

# # Copy the built files from the builder stage to the nginx server directory
# COPY --from=builder /app/dist /usr/share/nginx/html

# # Expose port 80 (default for nginx)
# EXPOSE 80

# # Start nginx to serve the app
# CMD ["nginx", "-g", "daemon off;"]


# Build stage
FROM node:18-alpine as build
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built assets from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration

COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
